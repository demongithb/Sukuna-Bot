/**
 * ‚ãÜÔΩ°Àö ‚òÅÔ∏éÔΩ°‚ãÜÔΩ° Àö‚òΩÀöÔΩ°‚ãÜ ‚ú¶ ‚ãÜÔΩ°Àö‚òÅÔ∏éÔΩ°‚ãÜÔΩ° Àö‚òΩÀöÔΩ°‚ãÜ ‚ú¶
 * 
 * ùêìùê®ùê¢ùê•ùêûùê≠-ùêÅùê®ùêÆùêßùêù ùêáùêöùêßùêöùê§ùê®-ùê§ùêÆùêß ùêëùêûùêúùê®ùê¶ùê©ùêûùêßùê¨ùêö ùêÉùê¢ùêöùê´ùê¢ùêö
 * 
 * "Cada d√≠a, Hanako-kun deja peque√±os obsequios para
 * sus fieles asistentes en el Reino Espiritual..."
 * 
 * ‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì
 * ‚îÉ        ‰∏É‰∏çÊÄùË≠∞        ‚îÉ
 * ‚îÉ   Los Siete Misterios   ‚îÉ
 * ‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îõ
 * 
 * ‚ãÜÔΩ°Àö ‚òÅÔ∏éÔΩ°‚ãÜÔΩ° Àö‚òΩÀöÔΩ°‚ãÜ ‚ú¶ ‚ãÜÔΩ°Àö‚òÅÔ∏éÔΩ°‚ãÜÔΩ° Àö‚òΩÀöÔΩ°‚ãÜ ‚ú¶
 */

import moment from 'moment-timezone'

// ‚úß Emojis y configuraci√≥n
const emojiHanako = 'üáØüáµ' 
const emojiTiempo = '‚è≥'
const moneda = 'MayCoins'
const canalId = '120363417511396883@g.us'

let handler = async (m, { conn }) => {
    try {
        // ‚úß Si global.db o global.db.data no est√°n inicializados
        if (!global.db || !global.db.data || !global.db.data.users) {
            conn.reply(m.chat, '„Äé‚ùó„Äè Base de datos no disponible o no inicializada', m)
            return
        }

        // ‚úß Asegurarse de que exista el usuario en la base de datos
        if (!global.db.data.users[m.sender]) {
            global.db.data.users[m.sender] = {
                exp: 0,
                coin: 0,
                diamond: 0,
                lastclaim: 0,
                registered: false,
                name: conn.getName(m.sender)
            }
        }

        // ‚úß Obtener datos del usuario
        const user = global.db.data.users[m.sender]
        const name = user.name || conn.getName(m.sender)

        // ‚úß Verificar si est√° registrado (si es requerido)
        if (handler.register && !user.registered) {
            return conn.reply(
                m.chat,
                `„Äé‚ùó„Äè *¬°No est√°s registrado!*
                
Para registrarte primero debes hacer un pacto con Hanako-kun.
Usa el comando: *_.registrar nombre.edad_*`,
                m
            )
        }

        // ‚úß Generar recompensas
        let coin = Math.floor(Math.random() * (500 - 100 + 1)) + 100
        let exp = Math.floor(Math.random() * (500 - 100 + 1)) + 100
        let d = Math.floor(Math.random() * (500 - 100 + 1)) + 100

        // ‚úß Verificar tiempo (inicializar lastclaim si es 0)
        if (!user.lastclaim) user.lastclaim = 0
        
        let time = user.lastclaim + 7200000 // 2 horas
        if (new Date() - user.lastclaim < 7200000) {
            return conn.reply(
                m.chat,
                `${emojiTiempo} *Los esp√≠ritus necesitan descansar...*

‚ùÄ Vuelve en ${msToTime(time - new Date())} para recibir m√°s obsequios, ${name}-kun.

"La paciencia es una virtud incluso en el mundo espiritual..."`,
                m
            )
        }

        // ‚úß Otorgar recompensas
        user.diamond += d
        user.coin += coin
        user.exp += exp

        // ‚úß Preparar mensaje para el usuario
        const mensajeRecompensa = `
‚ï≠‚îÄ„Äå ‚ãÜÔΩ°Àö‚òΩÀöÔΩ°‚ãÜ ùë∂ùíÉùíîùíÜùííùíñùíäùíê ùë¨ùíîùíëùíäùíìùíäùíïùíñùíÇùíç ‚ãÜÔΩ°Àö‚òΩÀöÔΩ°‚ãÜ „Äç‚îÄ‚ïÆ
‚îÇ    
‚îÇ ‡≠®‡≠ß *Asistente:* ${name}
‚îÇ    
‚îú‚îÄ ‚úß ùë©ùíÜùíèùíÖùíäùíÑùíäùíêùíèùíÜùíî ùë∂ùíïùíêùíìùíàùíÇùíÖùíÇùíî:
‚îÇ ‚ú¶ *${moneda}:* +${coin}
‚îÇ ‚ú® *Energ√≠a Espiritual:* +${exp}
‚îÇ üíé *Gemas M√≠sticas:* +${d}
‚îÇ üó®Ô∏è *Canal:* https://whatsapp.com/channel/0029VayXJte65yD6LQGiRB0R
‚îÇ üó®Ô∏è *Donde saliste:* https://chat.whatsapp.com/IxoNAHj00aBLTB0jeiJROa
‚îÇ üìú *Fecha:* ${moment().format('YYYY-MM-DD HH:mm:ss')}
‚îÇ    
‚ï∞‚îÄ„Äå ‚ãÜÔΩ°Àö‚òΩÀöÔΩ°‚ãÜ ‚úß ‚ãÜÔΩ°Àö‚òΩÀöÔΩ°‚ãÜ „Äç‚îÄ‚ïØ
`.trim()

        // ‚úß Reacci√≥n m√≠stica (manejo de errores para esta operaci√≥n)
        try {
            await m.react(emojiHanako)
        } catch (reactError) {
            console.error('Error al reaccionar:', reactError)
            // Continuar sin reacci√≥n si falla
        }

        // ‚úß M√©todo b√°sico de respuesta en caso de fallo del m√©todo avanzado
        try {
            await conn.sendMessage(m.chat, {
                text: mensajeRecompensa,
                contextInfo: {
                    externalAdReply: {
                        title: '‚úß Obsequio Diario de Hanako-kun ‚úß',
                        body: 'https://whatsapp.com/channel/0029VayXJte65yD6LQGiRB0R',
                        thumbnailUrl: 'https://files.catbox.moe/xr2m6u.jpg',
                        sourceUrl: 'https://whatsapp.com/channel/0029VayXJte65yD6LQGiRB0R',
                        mediaType: 1,
                        showAdAttribution: true,
                        renderLargerThumbnail: true
                    }
                }
            }, { quoted: m })
        } catch (sendError) {
            console.error('Error al enviar mensaje avanzado:', sendError)
            // Si falla, intentar m√©todo simple
            conn.reply(m.chat, mensajeRecompensa, m)
        }

        // ‚úß Enviar al canal (con manejo de errores)
        try {
            // ‚úß Preparar mensaje para el canal
            const mensajeCanal = `
‚ï≠‚îÄ„Äå ‚ùÄ ùëπùíÜùíÑùíêùíéùíëùíÜùíèùíîùíÇ ùë¨ùíèùíïùíìùíÜùíàùíÇùíÖùíÇ ‚ùÄ „Äç‚îÄ‚ïÆ
‚îÇ üó®Ô∏è *Recompensa:* Diaria
‚îÇ ‡≠®‡≠ß *Asistente:* ${name}
‚îÇ üì± *N√∫mero:* wa.me/${m.sender.split('@')[0]}
‚îÇ
‚îú‚îÄ ‚úß ùë©ùíÜùíèùíÖùíäùíÑùíäùíêùíèùíÜùíî:
‚îÇ ‚ú¶ ${moneda}: +${coin}
‚îÇ ‚ú® Energ√≠a Espiritual: +${exp}
‚îÇ üíé Gemas M√≠sticas: +${d}
‚îÇ
‚îÇ üìú *Fecha:* ${moment().format('YYYY-MM-DD HH:mm:ss')}
‚ï∞‚îÄ„Äå ùë∑ùíêùíì ùíçùíêùíî ùë∫ùíäùíÜùíïùíÜ ùë¥ùíäùíîùíïùíÜùíìùíäùíêùíî „Äç‚îÄ‚ïØ

> Reclama tu recompensa diaria con *_.diario_*.`

            // ‚úß M√©todo 1: Intentar desde el objeto global.conn
            if (global.conn && typeof global.conn.sendMessage === 'function') {
                // Obtener foto de perfil (con manejo de error)
                let pp
                try {
                    pp = await conn.profilePictureUrl(m.sender, 'image')
                } catch (ppError) {
                    pp = 'https://files.catbox.moe/xr2m6u.jpg'
                }

                await global.conn.sendMessage(canalId, {
                    image: { url: pp },
                    caption: mensajeCanal
                })
            } 
            // ‚úß M√©todo 2: Intentar desde el objeto conn local
            else if (conn && typeof conn.sendMessage === 'function') {
                let pp
                try {
                    pp = await conn.profilePictureUrl(m.sender, 'image')
                } catch (ppError) {
                    pp = 'https://files.catbox.moe/xr2m6u.jpg'
                }

                await conn.sendMessage(canalId, {
                    image: { url: pp },
                    caption: mensajeCanal
                })
            }
            // ‚úß M√©todo 3: Intentar un enfoque m√°s simple si los anteriores fallan
            else {
                await conn.sendMessage(canalId, { text: mensajeCanal })
            }
        } catch (canalError) {
            console.error('Error al enviar al canal:', canalError)
            // Intentar un √∫ltimo m√©todo muy b√°sico
            try {
                conn.reply(canalId, mensajeCanal)
            } catch (finalError) {
                console.error('Error en √∫ltimo intento de env√≠o al canal:', finalError)
            }
        }

        // ‚úß Actualizar el tiempo de reclamo al final, despu√©s de todo procesamiento
        user.lastclaim = Date.now()

    } catch (mainError) {
        console.error('Error principal en handler:', mainError)
        conn.reply(m.chat, `„Äé‚ùó„Äè Ocurri√≥ un error: ${mainError.message}`, m)
    }
}

// ‚úß Configuraci√≥n del comando
handler.help = ['daily', 'claim', 'diario']
handler.tags = ['rpg']
handler.command = ['daily', 'diario', 'claim', 'reclamar', 'obsequio']
handler.group = true
handler.register = true

export default handler

/**
 * ‚úß Convertir milisegundos a formato de tiempo legible
 */
function msToTime(duration) {
    var milliseconds = parseInt((duration % 1000) / 100),
        seconds = Math.floor((duration / 1000) % 60),
        minutes = Math.floor((duration / (1000 * 60)) % 60),
        hours = Math.floor((duration / (1000 * 60 * 60)) % 24)
    
    hours = (hours < 10) ? '0' + hours : hours
    minutes = (minutes < 10) ? '0' + minutes : minutes
    seconds = (seconds < 10) ? '0' + seconds : seconds
    
    return hours + ' Horas ' + minutes + ' Minutos'
}

/**
 * ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
 *      ‚ï≠‚îÄ‚îÄ‚ùÅ Hanako-kun ‚ùÅ‚îÄ‚îÄ‚ïÆ
 *      ‚îÇ "Acepta este regalo‚îÇ
 *      ‚îÇ  como muestra de   ‚îÇ
 *      ‚îÇ  nuestro pacto..." ‚îÇ
 *      ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ú¶‚ùò‚ú¶‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ
 * ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
 */
